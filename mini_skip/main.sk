/**
 * Copyright (c) SkipLabs, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

fun main(): void {
  SKFS.run(
    (context, srcDir) ~> {
      programDir = srcDir.contextWriterKeyValues(
        SKML.ProgramFile::fromFile,
        context,
        SKML.programDirName,
        SKML.populateProgram,
      );

      defs = programDir.contextWriterKeyValues(
        SKML.DefFile::fromFile,
        context,
        SKML.defsDirName,
        SKML.populateDefs,
      );

      deps = SKML.causalityCheck(context, defs);
      _ = SKML.createTAst(context, SKML.primitivesExample, defs, deps);
    },
    context ~> {
      tdefs = SKFS.LHandle(SKML.TypeFile::fromFile, SKML.typesDirName);
      evaluator = SKML.Evaluator{prims => SKML.primitivesExample, tdefs};
      debug(evaluator.eval(context, "main", Array[]));
    },
  )
}
