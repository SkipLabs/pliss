/**
 * Copyright (c) SkipLabs, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/******************************************************************************
/* Typing errors */
/*****************************************************************************/

module SKML;

base class TypeError

class UnifyError(
  posId: PosId,
  reason: String,
  ty1: Type,
  ty2: Type,
) extends TypeError

class UndefinedVarError(name: Name) extends TypeError
class UnexpectedClassNameError(name: Name) extends TypeError
class UnknownFieldError(name: Name) extends TypeError
class MissingFieldError(name: Name) extends TypeError
class UnboundNameError(name: Name) extends TypeError
class DuplicateFieldError(name: Name) extends TypeError
class MultipleDefinitionsError(name: Name) extends TypeError
class RecursiveTypeError() extends TypeError
class InvalidDotError(PosId) extends TypeError
class OutOfBoundsError(PosId) extends TypeError
class CyclicDefinition(CAError) extends TypeError

base class MismatchKind {
  children =
  | MKTuple()
  | MKFun()
}

class SizeMismatchError(
  kind: MismatchKind,
  pos1: PosId,
  size: Int,
  pos2: PosId,
  size2: Int,
) extends TypeError

module end;
